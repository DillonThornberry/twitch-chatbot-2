{"version":3,"sources":["components/CommandsContainer.js","components/ChannelPointsContainer.js","components/OtherContainer.js","components/SaveButton.js","components/OptionsContainer.js","components/BotButtonsContainer.js","components/Main.js","App.js","index.js"],"names":["CommandsContainer","props","className","type","name","onChange","switchHandler","checked","currentOptions","trivia","ChannelPointsContainer","secretWord","spamMessage","OtherContainer","awardPoints","atRobotApe","SaveOptionsButton","onClick","saveChanges","OptionsContainer","areIdenticalObjects","BotButtonsContainer","Main","data","initialOptions","App","event","a","fetch","method","headers","body","JSON","stringify","state","credentials","response","json","console","log","updated","setState","Object","keys","some","key","target","twitchDetails","code","window","location","search","split","history","replaceState","id","then","options","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68a818c6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function CommandsContainer(props) {\r\n    return (\r\n        <div className='commandsContainer'>\r\n           \r\n            <div className='eachCommandContainer'>\r\n                <div className='commandNameContainer'>\r\n                    <h1>!history</h1>\r\n                </div>\r\n\r\n                <div className='commandDescriptionContainer'>\r\n                    <h2 className='commandDescription'>See a random message from chat history.</h2>\r\n                </div>\r\n                \r\n                <div className='commandButtonContainer'>\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" name='history'   onChange={props.switchHandler}/>\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n            <div className='eachCommandContainer'>\r\n                <div className='commandNameContainer'>\r\n                    <h1>!trivia</h1>\r\n                </div>\r\n\r\n                <div className='commandDescriptionContainer'>\r\n                    <h2 className='commandDescription'>Prompt robot_ape to ask a trivia question.</h2>\r\n                </div>\r\n\r\n                <div className='commandButtonContainer'>\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" name='trivia' checked={props.currentOptions.trivia} onChange={props.switchHandler}/>\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ChannelPointsContainer(props) {\r\n    return (\r\n        <div className='channelPointsContainer'>\r\n            <div className='channelPointNoteDiv'>\r\n                <h1 className='channelPointNote'>NOTE: When adding these channel point rewards on Twitch, you must name them EXACTLY the same as the descriptions below.</h1>\r\n            </div>\r\n            <div className='eachRewardContainer'>\r\n                <div className='commandNameContainer'>\r\n                    <h1></h1>\r\n                </div>\r\n\r\n                <div className='commandDescriptionContainer'>\r\n                    <h2 className='rewardDescription'>Set a secret word</h2>\r\n                </div>\r\n\r\n                <div className='commandButtonContainer'>\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" name='secretWord' checked={props.currentOptions.secretWord} onChange={props.switchHandler}/>\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='eachRewardContainer'>\r\n                <div className='commandNameContainer'>\r\n                    <h1></h1>\r\n                </div>\r\n                \r\n                <div className='commandDescriptionContainer'>\r\n                    <h2 className='rewardDescription'>Spam a message 10 times in chat</h2>\r\n                </div>\r\n\r\n                <div className='commandButtonContainer'> \r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" name='spamMessage' checked={props.currentOptions.spamMessage} onChange={props.switchHandler}/>\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function OtherContainer(props) {\r\n    return (\r\n        <div className='otherContainer'>\r\n            <div className='eachOtherContainer'>\r\n\r\n                <div className='commandNameContainer'>\r\n                    <h1>!awardPoints</h1>\r\n                </div>\r\n\r\n                <div className='commandDescriptionContainer'>\r\n                    <h2 className='commandDescription'>Award a viewer with points.</h2>\r\n                </div>\r\n\r\n                <div className='commandButtonContainer'>\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" name='awardPoints' checked={props.currentOptions.awardPoints} onChange={props.switchHandler}/>\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='eachOtherContainer'>\r\n                <div className='commandNameContainer'>\r\n                    <h1>@robot_ape</h1>\r\n                </div>\r\n\r\n                <div className='commandDescriptionContainer'>\r\n                    <h2 className='commandDescription'>robot_ape will reply to you with a random message from chat history.</h2>\r\n                </div>\r\n\r\n                <div className='commandButtonContainer'>\r\n                    <label className=\"switch\">\r\n                        <input type=\"checkbox\" name='atRobotApe' checked={props.currentOptions.atRobotApe} onChange={props.switchHandler}/>\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SaveOptionsButton(props) {\r\n    return (\r\n        <div>\r\n            <button className='saveButton' onClick={props.saveChanges}>Save Options</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport CommandsContainer from './CommandsContainer'\r\nimport ChannelPointsContainer from './ChannelPointsContainer'\r\nimport OtherContainer from './OtherContainer'\r\nimport SaveButton from './SaveButton'\r\n\r\nexport default function OptionsContainer(props) {\r\n    return (\r\n        <div className='optionsContainer'>\r\n            <h1 className='optionsTitle'>Commands</h1>\r\n            <CommandsContainer currentOptions={props.currentOptions} switchHandler={props.switchHandler} />\r\n            <h1 className='optionsTitle'>Channel Points</h1>\r\n            <ChannelPointsContainer currentOptions={props.currentOptions} switchHandler={props.switchHandler}/>\r\n            <h1 className='optionsTitle'>Other Options</h1>\r\n            <OtherContainer currentOptions={props.currentOptions} switchHandler={props.switchHandler}/>\r\n            \r\n            {props.areIdenticalObjects() && <SaveButton saveChanges={props.saveChanges} />}\r\n           \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function BotButtonsContainer() {\r\n    return (\r\n        <div>\r\n            <button className='signOutButton'>Sign Out</button>\r\n\r\n            <button className='disconnectButton'>Disconnect From Bot</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n// import Nav from './Nav'\r\nimport OptionsContainer from './OptionsContainer'\r\nimport BotButtonsContainer from './BotButtonsContainer'\r\n\r\nexport default function Main(props) {\r\n    return (\r\n        <div className='mainDiv'>\r\n            {/* <Nav /> */}\r\n            \r\n            <OptionsContainer data={props.data} \r\n                              switchHandler={props.switchHandler}\r\n                              currentOptions={props.currentOptions}\r\n                              initialOptions={props.initialOptions}\r\n                              areIdenticalObjects={props.areIdenticalObjects}\r\n                              saveChanges={props.saveChanges} />\r\n\r\n            <BotButtonsContainer />\r\n\r\n            {/* <div className='robotIntroduction'> */}\r\n                {/* <h1 className='font1'>Robot Ape is a Twitch bot like no other. Customize your stream with trivia commands, history, secret word, and much more.</h1> */}\r\n            {/* </div> */}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport './App.css';\r\nimport Main from './components/Main'\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        twitchDetails: null,\r\n        initialOptions: null,\r\n        currentOptions: null\r\n    };\r\n  }\r\n  // https://robot-ape.herokuapp.com\r\n  saveChanges = async(event) => {\r\n    const response = await fetch('https://robot-ape.herokuapp.com/update', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(this.state.currentOptions),\r\n      credentials: 'include',\r\n    })\r\n    const data = await response.json()\r\n    console.log(data)\r\n    if (data.updated) {\r\n      this.setState({\r\n        initialOptions: this.state.currentOptions\r\n      })\r\n    }\r\n  }\r\n\r\n  areIdenticalObjects = () => {\r\n    return Object.keys(this.state.initialOptions).some(key => \r\n      this.state.currentOptions[key] !== this.state.initialOptions[key]\r\n    )\r\n  }\r\n\r\n  switchHandler = (event) => {\r\n    \r\n    this.setState({\r\n        currentOptions: {\r\n          ...this.state.currentOptions,\r\n          [event.target.name]: event.target.checked\r\n        }\r\n    })\r\n  } \r\n  \r\n  componentDidMount() {\r\n    let code = window.location.search.split('&')[0].split('=')[1]\r\n    window.history.replaceState({ id: 'dashboard' }, 'Dashboard', 'http://localhost:3002')\r\n  \r\n    fetch(`https://robot-ape.herokuapp.com/useroptions?${code ? 'code=' + code : ''}`, {\r\n      // mode: 'no-cors',\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        this.setState({\r\n          twitchDetails: data.twitchDetails,\r\n          initialOptions: data.options,\r\n          currentOptions: data.options,\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className='app'>\r\n        {console.log(this.state)}\r\n      {this.state.initialOptions ?\r\n      //  <button onClick={this.updateOptions}>update</button>\r\n       <Main  initialOptions={this.state.initialOptions}\r\n              currentOptions={this.state.currentOptions}\r\n              data={this.state} \r\n              switchHandler={this.switchHandler}\r\n              areIdenticalObjects={this.areIdenticalObjects}\r\n              saveChanges={this.saveChanges} />\r\n       : null\r\n      }\r\n     \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}